\hypertarget{matrix_lib_8hpp}{}\section{src/lib/matrix\+Lib.hpp File Reference}
\label{matrix_lib_8hpp}\index{src/lib/matrix\+Lib.\+hpp@{src/lib/matrix\+Lib.\+hpp}}


This file contains S\+PI and Library classes.  


{\ttfamily \#include \char`\"{}hwlib.\+hpp\char`\"{}}\newline
{\ttfamily \#include \char`\"{}spi.\+hpp\char`\"{}}\newline
Include dependency graph for matrix\+Lib.\+hpp\+:
% FIG 0
\subsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \hyperlink{structmatrix_1_1commands}{matrix\+::commands}
\item 
class \hyperlink{classmatrix_1_1_h_t__1632}{matrix\+::\+H\+T\+\_\+1632}
\item 
class \hyperlink{classmatrix_1_1matrix_window}{matrix\+::matrix\+Window}
\end{DoxyCompactItemize}


\subsection{Detailed Description}
This file contains S\+PI and Library classes. 

For my i\+Pass project, the S\+PI implementation from hwlib wasn\textquotesingle{}t enough. I had to make my own because not all features were supported in hwlib. Regarding my idea for this project, I have created a library which suoports a matrix of L\+E\+Ds with a size of 24x16, controlled by a H\+T1632 chip. 